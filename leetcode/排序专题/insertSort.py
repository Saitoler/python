# -*- coding: utf-8 -*-

## 插入排序
## 插入排序的思想是，每次只将一个数插入到序列的适当位置， 序列是已经部分排序完成的
## 从第二个数开始，我们假设前面部分 nums[:m] m = 1 是已排序好的
# 从第二个数开始，每个数都与前面已排序部分进行排序，从后往前依次比较，如果小于前面的值，则进行
# 交换，一直遍历到数组的开始位置
# 以下是代码实现：
# 最好的情况下，数组已经是升序排列了，那只要遍历 n-1 次，即将数组遍历一遍即可，时间复杂度是 O(n-1)，即 O(1)
# 最坏的情况下，数组是降序排列，在遍历 n-1次的基础上，每个元素还要与前面已排序部分的元素都再进行一次遍历交换，
#    时间复杂度是 O(n^2)

# 插入排序适合数据量比较小的情况

def insertSort(nums):
	for i in range(1, len(nums)):
		j = i
		while j > 0:
			if nums[j] < nums[j-1]:
				temp = nums[j]
				nums[j] = nums[j-1]
				nums[j-1] = temp
				j -= 1
			else:
				break

	return nums


if __name__ == "__main__":
	nums = [2, 1, 5, 3, 5, 7, 4, 8]
	print(insertSort(nums))